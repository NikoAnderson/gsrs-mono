type ClinicalTrial {
	Acronym: String
	BriefSummary: String
	BriefTitle: String!
	CompletionDate: String
	CompletionDateType: String
	DateCreatedRDAS: String!
	LastKnownStatus: String
	LastUpdatePostDate: String!
	LastUpdatePostDateType: String!
	LastUpdateSubmitDate: String!
  LastUpdatedRDAS: String!
	NCTId: String!
	NCTIdAlias: [String]
	OfficialTitle: String
	OverallStatus: String!
	Phase: [String]
	PrimaryCompletionDate: String
	PrimaryCompletionDateType: String
	ResultsFirstPostDate: String
	ResultsFirstPostDateType: String
	ResultsFirstPostedQCCommentsDate: String
	ResultsFirstPostedQCCommentsDateType: String
	StartDate: String
	StartDateType: String
	StudyFirstPostDate: String!
	StudyFirstPostDateType: String!
	StudyType: String!
	collaboratedWithCollaborators: [Collaborator!]! @relationship(type: "collaborated_with", direction: OUT)
	expandedAccessInfoExpandedAccesses: [ExpandedAccess!]! @relationship(type: "expanded_access_info", direction: OUT)
	hasIndividualPatientDataIndividualPatientData: [IndividualPatientData!]! @relationship(type: "has_individual_patient_data", direction: OUT)
	hasInterventionInterventions: [Intervention!]! @relationship(type: "has_intervention", direction: OUT)
	hasParticipantInfoParticipants: [Participant!]! @relationship(type: "has_participant_info", direction: OUT)
	hasStudyDesignStudyDesigns: [StudyDesign!]! @relationship(type: "has_study_design", direction: OUT)
	inLocationsLocations: [Location!]! @relationship(type: "in_locations", direction: OUT)
	investigatesConditionConditions: [Condition!]! @relationship(type: "investigates_condition", direction: OUT)
	patientRegistryInfoPatientRegistries: [PatientRegistry!]! @relationship(type: "patient_registry_info", direction: OUT)
	referencesisAbout: [Reference!]! @relationship(type: "is_about", direction: IN)
	sponsoredBySponsors: [Sponsor!]! @relationship(type: "sponsored_by", direction: OUT)
}

type Collaborator {
	CollaboratorClass: String!
	CollaboratorName: String!
	clinicalTrialscollaboratedWith: [ClinicalTrial!]! @relationship(type: "collaborated_with", direction: IN)
}

type Condition {
	Condition: String!
	clinicalTrialsinvestigatesCondition: [ClinicalTrial!]! @relationship(type: "investigates_condition", direction: IN)
	mappedToGardGards: [GARD!]! @relationship(type: "mapped_to_gard", direction: OUT)
}

type ExpandedAccess {
	ExpAccTypeIndividual: String
	ExpAccTypeIntermediate: String
	ExpAccTypeTreatment: String
	ExpandedAccessNCTId: String
	ExpandedAccessStatusForNCTId: String
	HasExpandedAccess: String
	clinicalTrialsexpandedAccessInfo: [ClinicalTrial!]! @relationship(type: "expanded_access_info", direction: IN)
}

type GARD {
	GardId: String!
	GardName: String!
	gardInClinicalTrials: [ClinicalTrial!]! @relationship(type: "gard_in", direction: OUT)
}

type IndividualPatientData {
	AvailIPDComment: String
	AvailIPDId: String
	AvailIPDType: String
	AvailIPDURL: String
	IPDSharing: String
	IPDSharingAccessCriteria: String
	IPDSharingDescription: String
	IPDSharingInfoType: String
	IPDSharingTimeFrame: String
	IPDSharingURL: String
	clinicalTrialshasIndividualPatientData: [ClinicalTrial!]! @relationship(type: "has_individual_patient_data", direction: IN)
}

type Intervention {
	InterventionName: String
	InterventionType: String!
	clinicalTrialshasIntervention: [ClinicalTrial!]! @relationship(type: "has_intervention", direction: IN)
}

type Location {
	LocationCity: String
	LocationCountry: String
	LocationFacility: String
	LocationState: String
	LocationStatus: String
	LocationZip: String
	clinicalTrialsinLocations: [ClinicalTrial!]! @relationship(type: "in_locations", direction: IN)
}

type Participant {
	EligibilityCriteria: String!
	clinicalTrialshasParticipantInfo: [ClinicalTrial!]! @relationship(type: "has_participant_info", direction: IN)
}

type PatientRegistry {
	PatientRegistry: String!
	clinicalTrialspatientRegistryInfo: [ClinicalTrial!]! @relationship(type: "patient_registry_info", direction: IN)
}

type Reference {
	ReferenceCitation: String!
	ReferencePMID: String
	ReferenceType: String!
	isAboutClinicalTrials: [ClinicalTrial!]! @relationship(type: "is_about", direction: OUT)
}

type Sponsor {
	LeadSponsorClass: String
	LeadSponsorName: String!
	clinicalTrialssponsoredBy: [ClinicalTrial!]! @relationship(type: "sponsored_by", direction: IN)
}

type StudyDesign {
	DesignAllocation: String
	DesignInterventionModel: String
	DesignInterventionModelDescription: String
	DesignMasking: String
	DesignMaskingDescription: String
	DesignObservationalModel: String
	DesignPrimaryPurpose: String
	DesignTimePerspective: String
	DetailedDescription: String
	PrimaryOutcomeDescription: String
	PrimaryOutcomeMeasure: String
	PrimaryOutcomeTimeFrame: String
	SamplingMethod: String
	clinicalTrialshasStudyDesign: [ClinicalTrial!]! @relationship(type: "has_study_design", direction: IN)
}
